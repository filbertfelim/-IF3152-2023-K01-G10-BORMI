// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url = env("DATABASE_URL") // uses connection pooling
}

enum UserRole {
  KASIR
  ADMIN
  INVENTARIS
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  role     UserRole @default(KASIR)
  CartItem CartItem[]
  Transaction Transaction[]
}

model Product {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  category String
  stock    Int
  price    Int
  image    String
  imageKey String
  CartItem CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int // data dummy
  quantity  Int // data dummy
  user      User    @relation(fields: [userId], references: [id])
  userId    Int // data dummy
  isPurchased Boolean @default(false) // data dummy ( buat ada yang false ada yang true )
  transaction   Transaction? @relation(fields: [transactionId], references: [id] , onDelete: Cascade)
  transactionId Int? // data dummy , kalau isPurchased true, harus ada isinya
}

model Transaction {
  id   Int      @id @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamp()
  reviewedAt DateTime? @db.Timestamp()
  user      User    @relation(fields: [userId], references: [id] , onDelete: Cascade)
  userId    Int  // data dummy
  date DateTime @db.Date  // data dummy
  CartItem CartItem[]

  @@index([createdAt(sort: Desc)])
}
